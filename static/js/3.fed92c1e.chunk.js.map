{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","style","item","src","alt","message","like","maxLength10","maxLength","AddNewPostForm","React","memo","onSubmit","handleSubmit","Field","name","component","Textarea","validate","required","ReduxAddNewPostForm","reduxForm","form","MyPosts","postItem","postData","map","mes","key","id","postsDescr","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreater","ProfileStatus","editMode","status","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","e","currentTarget","value","prevProps","prevState","this","onDoubleClick","onChange","autoFocus","onBlur","PureComponent","ProfileDataFormReduxForm","profile","error","errorSummaryError","createField","Input","type","Object","keys","contacts","k","st","contact","ProfileInfo","isOwner","savePhoto","saveProfile","Preloader","useState","setEditMode","descrBlock","photos","large","userPhoto","mainPhoto","target","files","length","initialValues","formData","then","goToEditMode","ProfileData","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","setUserProfile","getStatus","refreshProfile","Component","compose","getProfile","isAuth","getIsAuth","takeStatus","getAuthorizedUserId","withRouter"],"mappings":"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","file":"static/js/3.fed92c1e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descrBlock\":\"ProfileInfo_descrBlock__35MGM\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1g5vj\",\"contacts\":\"ProfileInfo_contacts__2Nq3s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__Jytb1\",\"postsDescr\":\"MyPosts_postsDescr__LMsof\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3OeMh\"};","import React from 'react';\nimport style from './Post.module.css';\n\nconst Post = (props) => {\n    return(\n      <div className={style.item}>\n        <img src=\"https://media.comicbook.com/2018/05/avatar-the-last-airbender-blu-ray-set-1111431.jpeg\" alt=\"\"/>\n        <div>\n          {props.message}\n        </div>\n        <div>\n          Like {props.like}\n        </div>\n      </div>\n    )\n}\n\nexport default Post;","import React from 'react';\nimport style from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { Field, reduxForm } from 'redux-form';\nimport { required, maxLength } from '../../../utils/validators/validators';\nimport { Textarea } from '../../common/FormControls/FormControls';\n\nconst maxLength10 = maxLength(10);\n\nconst AddNewPostForm = React.memo((props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field name=\"newPostText\" component={Textarea} validate={[required, maxLength10]} />\n        {/* <textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText} /> */}\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n  )\n})\n\nconst ReduxAddNewPostForm = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\n\nconst MyPosts = (props) => {\n  let postItem = props.postData.map(mes => <Post key={mes.id} message={mes.message} like={mes.like} />);\n\n  // let newPostElement = React.createRef();\n\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  };\n\n  return (\n    <div className={style.postsDescr}>\n      <h3>My posts</h3>\n        <ReduxAddNewPostForm onSubmit={onAddPost} />\n      <div className={style.item}>\n        {postItem}\n      </div>\n    </div>\n  )\n}\n\n// const MyPostsRedux = reduxForm({\n//   form: 'posts'\n// })(MyPosts);\n\n// const myPostsForm = (props) => {\n//   const onSubmit = (formData) => {\n//     console.log(formData);\n//   }\n\n//   return (\n//     <div>\n//       <h4>New posts</h4>\n//       <MyPostsRedux onSubmit={onSubmit} />\n//     </div>\n//   )\n// }\n\nexport default MyPosts;","import { addPostActionCreater } from '../../../redux/propfileReduser';\nimport MyPosts from './MyPosts';\nimport {connect} from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return{\n    postData: state.profilePage.postData,\n    newPostText: state.profilePage.newPostText\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return{\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreater(newPostText));\n    }\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport style from './ProfileInfo.module.css';\n\nclass ProfileStatus extends React.PureComponent{\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n    // this.activateEditMode = this.activateEditMode.bind(this);\n    // this.deactivateEditMode = this.deactivateEditMode.bind(this);\n\n    activateEditMode = () => {\n        this.setState({ // setState - асинхронен\n            editMode: true\n        })\n    }\n\n    deactivateEditMode = () => {\n        this.setState({\n            editMode: false\n        });\n        this.props.updateStatus(this.state.status);\n    }\n\n    onStatusChange = (e) => {\n        this.setState({\n            status: e.currentTarget.value\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.status !== this.props.status) {\n            this.setState({\n                status: this.props.status\n            });\n        }\n    }\n\n    render() {\n        // debugger\n        return(\n            <div>\n                {!this.state.editMode &&\n                    <div>\n                        <span onDoubleClick={this.activateEditMode}>\n                            {this.props.status || \"No status\"}\n                        </span>\n                    </div>\n                }\n\n                {this.state.editMode &&\n                    <div>\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default ProfileStatus;","import React from 'react';\r\nimport st from './ProfileDataForm.module.css';\r\nimport style from '../../../common/FormControls/FormControls.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { createField, Input, Textarea } from '../../../common/FormControls/FormControls';\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => { // 97 1:02:19\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <button>Save</button>\r\n            {error && <div className={style.errorSummaryError}>\r\n                <h3>\r\n                    {error}\r\n                </h3>\r\n            </div>}\r\n            <div>\r\n                <b>Full name: </b> { createField(\"Full name\", \"fullName\", [], Input) }\r\n            </div>\r\n\r\n            <div>\r\n                <b>Looking for a job:</b>{createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n            </div>\r\n\r\n            <div>\r\n                <b>My professional skills: </b>{createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n            </div>\r\n\r\n            <div>\r\n                <b>About me:</b> {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n            </div>\r\n\r\n            <div>\r\n                <b>Contacts: {Object.keys(profile.contacts).map(k => {\r\n                return <div key={k} className={st.contact}>\r\n                    <b>{k}: </b> {createField(k, \"contacts.\" + k, [], Input)}\r\n                </div>\r\n                })}</b>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, { useState } from 'react';\nimport style from './ProfileInfo.module.css';\nimport Preloader from '../../common/Preloader/Preloader';\nimport ProfileStatus from './ProfileStatus';\nimport userPhoto from '../../../assets/images/person-icon.png';\nimport ProfileDataForm from './ProfileDataForm/ProfileDataForm';\n\nconst ProfileInfo = React.memo(({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\n  if(!profile) {\n    return <Preloader />\n  }\n\n  const [ editMode, setEditMode ] = useState(false);\n\n  const onMainPhotoSelected = (e) => {\n    if(e.target.files.length) {\n      savePhoto(e.target.files[0]);\n    }\n  }\n\n  const onSubmit = (formData) => {\n    saveProfile(formData).then(() => {\n      setEditMode(false);\n    })\n  }\n  \n  return(\n    <div>\n      <div>\n        <img src=\"https://png.pngtree.com/back_origin_pic/00/09/01/cbe0026ede51bf3b24b61f4d99394066.jpg\" alt=\"fon\"  />\n      </div>\n      <div className={style.descrBlock}>\n        <img src={profile.photos.large || userPhoto} className={style.mainPhoto} />\n        {isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\n        \n        {editMode ? <ProfileDataForm initialValues={profile} profile={profile} status={status} updateStatus={updateStatus} onSubmit={onSubmit} />\n        : <ProfileData profile={profile} status={status} updateStatus={updateStatus} isOwner={isOwner} goToEditMode={() => {setEditMode(true)}} /> }\n      </div>\n    </div>\n  )\n})\n\nconst ProfileData = ({profile, status, updateStatus, isOwner, goToEditMode}) => {\n  return (\n    <div>\n      {isOwner && <div>\n          <button onClick={goToEditMode}>Edit</button>\n        </div>}\n      <div>\n        <b>Full name:</b> {profile.fullName}\n      </div>\n      <div>\n        <b>Looking for a job:</b>{profile.lookingForAJob ? ' Yes' : ' No'}\n      </div>\n      {profile.lookingForAJob &&\n        <div>\n          <b>My professional skills: </b>{profile.lookingForAJobDescription}\n        </div>\n      }\n      <div>\n        <b>About me: </b>{profile.aboutMe}\n      </div>\n      <div>\n        <b>Contacts: </b>{Object.keys(profile.contacts).map(k => {\n          return <Contact key={k} contactTitle={k} contactValue={profile.contacts[k]} />\n        })}\n      </div>\n      <div>\n        <b>Status: </b><ProfileStatus status={status} updateStatus={updateStatus} />\n      </div>\n    </div>\n  )\n};\n\nconst Contact = ({contactTitle, contactValue}) => {\n  return <div className={style.contacts}><b>{contactTitle}: </b>{contactValue}</div>\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\nconst Profile = (props) => {\n  return(\n    <div>\n      <ProfileInfo \n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n        isOwner={props.isOwner}\n        savePhoto={props.savePhoto}\n        saveProfile={props.saveProfile}\n      />\n      <MyPostsContainer />\n    </div>\n  )\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { setUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../redux/propfileReduser';\nimport { withRouter, } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { getProfile,\n        getIsAuth,\n        takeStatus,\n        getAuthorizedUserId } from '../../redux/usersSelectors';\n\n\nclass ProfileContainer extends React.Component {\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        \n        if(!userId) {\n            userId = this.props.authorizedUserId;\n            // userId = 1190;\n            if(!userId) {\n                this.props.history.push('/login');\n            }\n        }\n\n        this.props.setUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    componentDidMount() {\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(this.props.match.params.userId != prevProps.match.params.userId){\n            this.refreshProfile()\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                <Profile {...this.props} profile={this.props.profile}\n                                        status={this.props.status}\n                                        updateStatus={this.props.updateStatus}\n                                        isOwner={!this.props.match.params.userId}\n                                        savePhoto={this.props.savePhoto} />\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        profile: getProfile(state),\n        isAuth: getIsAuth(state),\n        status: takeStatus(state),\n        authorizedUserId: getAuthorizedUserId(state)\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, {\n        setUserProfile,\n        getStatus,\n        updateStatus,\n        savePhoto,\n        saveProfile\n    }),\n    withRouter\n)(ProfileContainer);"],"sourceRoot":""}